name: 🚀 Deploy

on:
  push:
    branches:
      - master
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: ⚡ Run vitest
        run: npm run test -- --coverage
  #   cypress:
  #     name: ⚫️ Cypress
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: ⬇️ Checkout repo
  #         uses: actions/checkout@v4

  #       - name: 🏄 Copy test env vars
  #         run: cp .env.example .env

  #       - name: ⎔ Setup node
  #         uses: actions/setup-node@v4
  #         with:
  #           cache: npm
  #           cache-dependency-path: ./package.json
  #           node-version: 18

  #       - name: 📥 Install deps
  #         run: npm install

  #       - name: 🛠 Setup Database
  #         run: npx prisma migrate reset --force

  #       - name: ⚙️ Build
  #         run: npm run build

  #       - name: 🌳 Cypress run
  #         uses: cypress-io/github-action@v6
  #         with:
  #           start: npm run start:mocks
  #           wait-on: http://localhost:8811
  #         env:
  #           PORT: 8811
  #   deploy:
  #     name: 🚀 Deploy
  #     runs-on: ubuntu-latest
  #     needs: [lint, typecheck, vitest, cypress]
  #     # only deploy master/dev branch on pushes
  #     if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

  #     steps:
  #       - name: ⬇️ Checkout repo
  #         uses: actions/checkout@v4

  #       - name: 👀 Read app name
  #         uses: SebRollen/toml-action@v1.0.2
  #         id: app_name
  #         with:
  #           file: fly.toml
  #           field: app

  #       - name: 🎈 Setup Fly
  #         uses: superfly/flyctl-actions/setup-flyctl@v1.4

  #       - name: 🚀 Deploy Staging
  #         if: ${{ github.ref == 'refs/heads/dev' }}
  #         run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
  #         env:
  #           FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  #       - name: 🚀 Deploy Production
  #         if: ${{ github.ref == 'refs/heads/master' }}
  #         run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
  #         env:
  #           FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    # if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            amirulabu/learning-log-remix
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
